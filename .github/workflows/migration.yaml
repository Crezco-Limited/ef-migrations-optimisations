name: EF Migrations

on:
  push:
  workflow_dispatch:

env:
  WORKING_DIRECTORY: 'EfMigrationsOptimisations'
  BUILD_CONFIGURATION: 'Release'

jobs:
  RunMigration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install .NET Core 7 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ vars.DOTNET_VERSION }}

      - name: Install dotnet-ef
        run: dotnet tool install --global dotnet-ef

      - name: Restore project
        run: dotnet restore -r linux-x64 EfMigrationsOptimisations/EfMigrationsOptimisations.csproj

      - name: Build project
        run: dotnet build --no-restore --configuration ${{ env.BUILD_CONFIGURATION }} EfMigrationsOptimisations/EfMigrationsOptimisations.csproj

      - name: Generate Scripts for Hash
        shell: pwsh
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          $contexts = "TestContext"

          foreach ($context in $contexts)
          {
            Write-Host "Generating script for $context"
            dotnet-ef migrations script --configuration ${{ env.BUILD_CONFIGURATION }} --no-build --context $context -o ${{ github.workspace }}/migration-$context-${{ github.run_number }}.sql
          }

      - name: Check Cache
        uses: azure/powershell@v1
        id: checkCache
        with:
          inlinescript: |
            cd ${{ env.WORKING_DIRECTORY }}
            
            $contexts = "${{ vars.CONTEXTS }}"
            
            foreach ($context in $contexts.Split(","))
            {
              Write-Host "${context}"
              New-Variable -Name ${context}_CacheHit -Value $false;
              try {
                Write-Host "Checking file hash"
                $hash = (Get-FileHash ${{ github.workspace }}/migration-${context}-${{ github.run_number }}.sql).Hash
                Write-Host "Got hash $hash"

                $result = az storage blob exists --account-name efmigrationscache --container-name migrations --name "$hash.exe" --account-key ${{ secrets.ACCOUNT_KEY }}
                Set-Variable -Name ${context}_CacheHit -Value ($result | ConvertFrom-Json).exists
                if (Get-Variable -Name ${context}_CacheHit -ValueOnly) {
                  Write-Host "Cache hit, downloading migrations"
                  az storage blob download -f "${{ github.workspace }}/migration-${context}-${{ github.run_number }}.exe" --account-name efmigrationscache --account-key ${{ secrets.ACCOUNT_KEY }} --container-name migrations --name "$hash.exe"
                } else {
                  Write-Host "Cache not hit, generating migrations"
                  dotnet-ef migrations bundle -o ${{ github.workspace }}/migration-${context}-${{ github.run_number }}.exe --configuration ${{ env.BUILD_CONFIGURATION }} --no-build --verbose --context ${context}
            
                  Write-Host "Bundle created, uploading to cache"
                  az storage blob upload -f "${{ github.workspace }}/migration-${context}-${{ github.run_number }}.exe" --account-name efmigrationscache --account-key ${{ secrets.ACCOUNT_KEY }} --container-name migrations --name "${hash}.exe" --overwrite
                }
              }
              catch {
                Write-Host "Error occurred when checking cache, setting cache hit to false"
              }
              Write-Output "${context}_CACHE_HIT=$(Get-Variable -Name ${context}_CacheHit -ValueOnly)" >> $Env:GITHUB_OUTPUT
            }
          azPSVersion: "latest"

      - name: 'TestContext: Publish Bundle'
        uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/migration-TestContext-${{ github.run_number }}.exe
          name: Migration.TestContext-${{ github.run_number }}